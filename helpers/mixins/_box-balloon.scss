// #Box Balloon Mixin
// This mixin is for create a balloon in one side of a box, like these:
//	 ___________		 ___________
//	<			|	or	|			|
//	|___________|		|___________>

// @param {Array} $absolute-coordinates: List with absolute points (top, right, bottom, left) to place and build the triangle that will become the balloon. Value 0 in some value indicates is not using.
// @param {Array} $background-color: List with border colors (border-top, border-right, border-bottom, border-left) used to style the balloon background. (In firefox, shapes with transparent border have a visible border... We can hide it setting a color equals to the background color around).
// @param {Property} $shape-size: The size of the balloon.
// @param {Array} $absolute-coordinates-border: List with absolute points (top, right, bottom, left) to place and build the border of the triangle. Value 0 in some value indicates is not using. By default is false.
// @param {Array} $border-colors: Mandatory if $absolute-coordinates-border is true. List with border colors (border-top, border-right, border-bottom, border-left) used to style the border of the ballon.
// @param {Property} $border-shape-size: Mandatory if $absolute-coordinates-border is true. The size of the border balloon.

// * Example: @include box-balloon(
//		0 0 (-$spacing*2) $spacing*2,
//		$color-box-light transparent,
//		, $spacing );

@mixin box-balloon( $absolute-coordinates, $background-color, $shape-size,
					$absolute-coordinates-border: false , $border-colors: false, $border-shape-size: false ) {
	& {
		position: relative;
	}
	&:after {
		position: absolute;
		width: 0;
		height: 0;
		border-style: solid;
		content: "";

		@if nth( $absolute-coordinates, 1 ) != 0 {

			top: nth( $absolute-coordinates, 1 );
		}
		@if nth( $absolute-coordinates, 2 ) != 0 {

			right: nth( $absolute-coordinates, 2 );
		}
		@if nth( $absolute-coordinates, 3 ) != 0 {

			bottom: nth( $absolute-coordinates, 3 );
		}
		@if nth( $absolute-coordinates, 4 ) != 0 {

			left: nth( $absolute-coordinates, 4 );
		}
		border-color: $background-color;
		border-width: $shape-size;
	}

	@if $absolute-coordinates-border != false {

		&:before {
			position: absolute;
			width: 0;
			height: 0;
			border-style: solid;
			content: "";

			@if nth( $absolute-coordinates-border, 1 ) != 0 {

				top: nth( $absolute-coordinates-border, 1 );
			}
			@if nth( $absolute-coordinates-border, 2 ) != 0 {

				right: nth( $absolute-coordinates-border, 2 );
			}
			@if nth( $absolute-coordinates-border, 3 ) != 0 {

				bottom: nth( $absolute-coordinates-border, 3 );
			}
			@if nth( $absolute-coordinates-border, 4 ) != 0 {

				left: nth( $absolute-coordinates-border, 4 );
			}
			border-color: $border-colors;
			border-width: $border-shape-size;
		}
	}
}